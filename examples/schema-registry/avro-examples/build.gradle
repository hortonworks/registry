/*
 * Copyright 2018-2020 Cloudera, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

plugins {
    id "com.github.davidmc24.gradle.plugin.avro" version "1.0.0"
}

dependencies {
    implementation group: 'org.scala-lang', name: 'scala-library', version: versions_scala212
    implementation group: 'org.scala-lang', name: 'scala-reflect', version: versions_scala212

    implementation project(':schema-registry:schema-registry-serdes')
    testImplementation(project(':registry-webservice')) {
        exclude group: 'org.apache.hadoop'
    }
    testImplementation(project(':schema-registry:schema-registry-webservice')) {
        exclude group: 'org.apache.hadoop'
    }

    implementation libraries.commons.cli
    implementation libraries.dropwizard.testing
    implementation libraries.el_api
    
    implementation libraries.kafka.clients
    implementation libraries.kafka.streams
    
    implementation libraries.jackson.dataformat_csv
    implementation libraries.jackson.jaxrs
    implementation libraries.jackson.scala_module
    
    implementation libraries.logging.slf4j_api
    implementation libraries.logging.logback
    
    testImplementation libraries.junit
    testImplementation project(':examples:schema-registry:serdes-examples')
    testImplementation(project(':schema-registry:schema-registry-core'))
}

avro {
    createSetters = false
    fieldVisibility = "PRIVATE"
    //enableDecimalLogicalType = true
}

def generatedResources = sourceSets.main.output.resourcesDir
task copySerdesExampleJar(type: Copy) {
    mustRunAfter(checkstyleMain, checkstyleTest, javadoc, jar)
    from("$projectDir/../serdes-examples/build/libs") {
        include 'serdes-examples*jar'
        exclude 'serdes-examples*javadoc.jar'
        exclude 'serdes-examples*sources.jar'
        exclude 'serdes-examples*test*.jar'
    }
    into generatedResources
    rename { String fileName -> 'serdes-examples.jar' }
}
compileTestJava.finalizedBy(copySerdesExampleJar)
test.dependsOn(copySerdesExampleJar)

