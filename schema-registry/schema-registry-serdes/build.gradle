/*
 * Copyright 2018-2020 Cloudera, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

plugins {
    id 'java-library'
}

dependencies {

    compileOnly group: 'org.scala-lang', name: 'scala-library', version: scala_version
    compileOnly group: 'org.scala-lang', name: 'scala-reflect', version: scala_version
    
    api("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider")
    api("org.glassfish.jersey.media:jersey-media-json-jackson")

    constraints {
        implementation("com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.core:jackson-core") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.core:jackson-databind") { version { strictly project.versions_jackson2_databind } }
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-json-org") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-guava") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-joda") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.module:jackson-module-parameter-names") { version { strictly project.versions_jackson2 } }
        implementation("com.fasterxml.jackson.core:jackson-annotations") { version { strictly project.versions_jackson2 } }
        implementation("org.glassfish.jersey.media:jersey-media-json-jackson") { version { strictly project.versions_jersey2 } }
        implementation("org.glassfish.jersey.core:jersey-common") { version { strictly project.versions_jersey2 } }
        implementation("org.glassfish.jersey.ext:jersey-entity-filtering") { version { strictly project.versions_jersey2 } }
    }
    
    api project(':schema-registry:schema-registry-client')
    api project(':schema-registry:schema-registry-common')
    
    // excluding scala-library and using the project specific version
    implementation(libraries.json_kjetland) {
        exclude group: 'org.scala-lang', module: 'scala-library'
    }
    implementation group: 'org.scala-lang', name: 'scala-library', version: scala_version

    api libraries.avro
    api libraries.commons.io
    
    testImplementation(project(':schema-registry:schema-registry-core')) {
        exclude group: 'javax.validation', module: 'validation-api'
        exclude group: 'com.fasterxml.jackson.core'
        exclude group: 'com.fasterxml.jackson.datatype'
        exclude group: 'com.fasterxml.jackson.module'
        exclude group: 'com.fasterxml.jackson.dataformat'
    }
    testImplementation(project(path: ':schema-registry:jersey-shaded', configuration: 'shadow'))
    testImplementation(project(':storage:storage-core'))
    testImplementation(project(':registry-common'))

    compileOnly libraries.kafka.clients
    testImplementation libraries.kafka.clients
    testImplementation libraries.commons.lang3
    
    testImplementation libraries.mockito
    testImplementation libraries.junit

}
