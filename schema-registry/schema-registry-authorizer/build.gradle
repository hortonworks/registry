/*
 * Copyright 2018-2020 Cloudera, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

plugins {
    id 'java-library'
}

dependencies {

    compileOnly project(':ranger-plugin')
    api libraries.jna_platform

    api project(':schema-registry:schema-registry-core')
    api(project(':common-auth')) {
        exclude group: 'javax.servlet', module: 'servlet-api'
    }

    testImplementation project(':ranger-plugin')
    testImplementation libraries.junit
    testRuntimeOnly libraries.logging.slf4j_jcl
    
}

task copyDependencies(type: Sync) {
    into "$buildDir/dependency"
    from configurations.runtimeClasspath
}
assemble.dependsOn(copyDependencies)

// This project generates 3 JAR files

task shim(type: Jar) {
    archiveClassifier = "shim"
    from(sourceSets.main.output) {
        include "com/hortonworks/registries/schemaregistry/authorizer/ranger/shim/**"
    }
}

task authRanger(type: Jar) {
    archiveClassifier = "ranger"
    from(sourceSets.main.output) {
        include "com/hortonworks/registries/schemaregistry/authorizer/ranger/**"
        exclude "com/hortonworks/registries/schemaregistry/authorizer/ranger/shim/**"
    }
}

jar {
    exclude "com/hortonworks/registries/schemaregistry/authorizer/ranger/**"
}

compileJava.finalizedBy(shim)
shim.finalizedBy(authRanger)
