/*
 * Copyright 2018-2020 Cloudera, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

plugins {
    id 'com.google.cloud.tools.jib' version '2.7.1'
}

def imageName = 'schema-registry'
def jibDir = "$buildDir/jib-directories"
def connectorVersion = "5.1.48"

jib {
    from {
        image = 'openjdk:8-jre-alpine'
    }

    to {
        image = "$imageName"
        tags = [ project_version ]
    }
    
    extraDirectories {
        paths{
            path{
                from = "${jibDir}/schemaregistry-${project_version}"
                into = "/opt/registry"
            }
            path{
                from = "${jibDir}/connector1"
                into = "/opt/registry"
            }
            path{
                from = "${jibDir}/connector2"
                into = "/opt/registry"
            }
            path {
                from = "${projectDir}/src/main/jib"
                into = "/opt/registry/bin"
            }
            permissions = [
                    '/opt/registry/bin/entrypoint.sh': '755',
                    '/opt/registry/bin/registry': '755',
                    '/opt/registry/bin/registry-server-start.sh': '755'
            ]
        }
    }
    
    container {
        entrypoint = '/opt/registry/bin/entrypoint.sh'
        creationTime = "USE_CURRENT_TIMESTAMP"
        ports = ['9090', '9091']
}}

task jibDirectories(type: Copy) {
            from zipTree("$rootDir/registry-dist/build/distributions/schemaregistry-${project_version}.zip")
            into jibDir
            eachFile {
                if (it.name == "bootstrap-storage.sh" || it.name == "registry-server-start.sh") {
                    filter { line ->
                        if (line == '#!/usr/bin/env bash' || line == '#!/bin/bash') {
                            "#!/bin/sh"
                        } else {
                            line
                        }
                    }
                }
            }
}

task copyConnectorToBootstrap(type: Copy) {
    from(configurations.runtimeOnly) {
        include "mysql-connector-java-${connectorVersion}.jar"
    }
    into "${jibDir}/connector1/bootstrap/lib"
}
copyConnectorToBootstrap.dependsOn(jibDirectories)

task copyConnectorToLibs(type: Copy) {
    from(configurations.runtimeOnly) {
        include "mysql-connector-java-${connectorVersion}.jar"
    }
    into "${jibDir}/connector2/libs"
}
copyConnectorToLibs.dependsOn(jibDirectories)

tasks.named('jib').configure {
    dependsOn 'copyConnectorToBootstrap'
    dependsOn 'copyConnectorToLibs'
}
tasks.named('jibDockerBuild').configure {
    dependsOn 'copyConnectorToBootstrap'
    dependsOn 'copyConnectorToLibs'
}

dependencies {
    implementation project(':hortonworks-registries-bin')
    implementation project(':storage:storage-tool')
    runtimeOnly group: 'mysql', name: 'mysql-connector-java', version: connectorVersion
    
    jibDirectories.dependsOn(':hortonworks-registries-bin:build')
}
