# registries configuration
modules:
# tag-registry configuration
#  - name: tag-registry
#    className: org.apache.iotas.registries.tag.service.TagRegistryModule
#
# schema-registry configuration
  - name: schema-registry
    className: org.apache.registries.schemaregistry.webservice.SchemaRegistryModule
    config:
      schemaProviders:
        - providerClass: "org.apache.registries.schemaregistry.avro.AvroSchemaProvider"
          defaultSerializerClass: "org.apache.registries.schemaregistry.serdes.avro.AvroSnapshotSerializer"
          defaultDeserializerClass: "org.apache.registries.schemaregistry.serdes.avro.AvroSnapshotDeserializer"

      # schema cache properties
      # inmemory schema versions cache size
      schemaCacheSize: 10000
      # inmemory schema version cache entry expiry interval after access
      schemaCacheExpiryInterval: 3600

# Filesystem based jar storage
fileStorageConfiguration:
  className: "org.apache.registries.common.util.LocalFileSystemStorage"
  properties:
    directory: "/tmp"
# storage provider configuration
storageProviderConfiguration:
 providerClass: "org.apache.registries.storage.impl.memory.InMemoryStorageManager"
# Example configuration for phoenix based JDBC driver
#storageProviderConfiguration:
# providerClass: "org.apache.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#   db.type: "phoenix"
#   queryTimeoutInSecs: 30
#   db.properties:
#     jdbcDriverClass: "org.apache.phoenix.jdbc.PhoenixDriver"
#     jdbcUrl: "jdbc:phoenix:localhost:2181"
#
# MySQL based jdbc provider configuration is:
#storageProviderConfiguration:
# providerClass: "org.apache.registries.storage.impl.jdbc.JdbcStorageManager"
# properties:
#   db.type: "mysql"
#   queryTimeoutInSecs: 30
#   db.properties:
#     dataSourceClassName: "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
#     dataSource.url: "jdbc:mysql://localhost/schema_registry"
#     dataSource.user: ""
#     dataSource.password: ""

#swagger configuration
swagger:
  resourcePackage: org.apache.registries.schemaregistry.webservice

#enable CORS, may want to disable in production
enableCors: false

server:
  rootPath: '/api/*'
#  softNofileLimit: 1000
#  hardNofileLimit: 1000
  applicationConnectors:
    - type: http
      port: 9090
#    - type: https
#      port: 8443
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false
# this requires the alpn-boot library on the JVM's boot classpath
#    - type: spdy3
#      port: 8445
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false
  adminConnectors:
    - type: http
      port: 9091
#    - type: https
#      port: 8444
#      keyStorePath: example.keystore
#      keyStorePassword: example
#      validateCerts: false

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO, DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    org.apache.registries: DEBUG


  appenders:
    - type: console
#    - type: file
#      threshold: DEBUG
#      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
#      currentLogFilename: /tmp/application.log
#      archivedLogFilenamePattern: /tmp/application-%d{yyyy-MM-dd}-%i.log.gz
#      archivedFileCount: 7
#      timeZone: UTC
#      maxFileSize: 10MB

#jerseyClient:
#  minThreads: 1
#  maxThreads: 16
#  workQueueSize: 1000
#  gzipEnabled: true
#  gzipEnabledForRequests: true
#  chunkedEncodingEnabled: true
#  timeout: 1000ms
#  connectionTimeout: 1000ms
#  timeToLive: 1h
#  cookiesEnabled: false
#  maxConnections: 10
#  maxConnectionsPerRoute: 1024
#  keepAlive: 0ms
#  retries: 10
#  userAgent: Storm-Client

